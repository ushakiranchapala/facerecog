{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Documents/facerecongbrain/facerecogbrian/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'Signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martin/Documents/facerecongbrain/facerecogbrian/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from  './components/Navigation/Navigation';\nimport Signin from  './components/Signin/Signin';\nimport Register from  './components/Register/Register';\nimport FaceRecognition from  './components/FaceRecognition/FaceRecognition';\nimport Logo from  './components/Logo/Logo';\nimport ImageLinkForm from  './components/ImageLinkForm/ImageLinkForm';\nimport Rank from  './components/Rank/Rank';\n\nimport './App.css';\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState ={\n  input:'',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n\n      }\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n    }\n\n      })\n  }\n\n  calculateFaceLocation =(data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n\n    fetch('http://localhost:3000/imageurl', {\n          method: 'post',\n          headers: {'content-type' : 'application/json'},\n          body: JSON.stringify({\n          input: this.state.input\n    \n          \n      })\n      })\n    \n    .then(response => {\n      if (response) { \n      fetch('http://localhost:3000/image', {\n          method: 'put',\n          headers: {'content-type' : 'application/json'},\n          body: JSON.stringify({\n          id: this.state.user.id\n    \n          \n      })\n      })\n      .then (response => response.json())\n    .then(count => {\n      this.setState(Object.assign(this.state.user, {entries: count}))\n    })\n      .catch(console.log)\n    }\n\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err)); \n  \n  }\n\nonRouteChange = (route) => {\n   if (route ==='signout'){\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n  this.setState({route: route});\n}\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n    <div className=\"App\">\n      <Particles className='particles'\n          params={particlesOptions}\n        />\n\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      { route === 'home' \n      ?  <div>\n      <Logo />\n      <Rank name={this.state.user.name} entries={this.state.user.entries} />\n      <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onButtonSubmit={this.onButtonSubmit}\n      />\n      \n      <FaceRecognition box={box} imageUrl={imageUrl}/>\n      </div>\n      : (\n          route === 'signin'\n        \n      ? <Signin loadUser= {this.loadUser} onRouteChange={this.onRouteChange}/>\n      : <Register loadUser= {this.loadUser} onRouteChange={this.onRouteChange}/>\n       )\n      }\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}