{"ast":null,"code":"var _jsxFileName = \"/Users/martin/Documents/facerecongbrain/facerecogbrian/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'eac42c906ef348c0a683756610a35251'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martin/Documents/facerecongbrain/facerecogbrian/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","isSignedIn","componentDidMount","fetch","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from  './components/Navigation/Navigation';\nimport Signin from  './components/Signin/Signin';\nimport Register from  './components/Register/Register';\nimport FaceRecognition from  './components/FaceRecognition/FaceRecognition';\nimport Logo from  './components/Logo/Logo';\nimport ImageLinkForm from  './components/ImageLinkForm/ImageLinkForm';\nimport Rank from  './components/Rank/Rank';\n\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'eac42c906ef348c0a683756610a35251'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state ={\n      input:'',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      isSignedIn: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/')\n    .then(response => response.json())\n    .then(console.log)\n  }\n\n  calculateFaceLocation =(data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, \n     this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err)); \n  \n  }\n\nonRouteChange = (route) => {\n   if (route ==='signout'){\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n  this.setState({route: route});\n}\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n    <div className=\"App\">\n      <Particles className='particles'\n          params={particlesOptions}\n        />\n\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      { route === 'home' \n      ?  <div>\n      <Logo />\n      <Rank />\n      <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onButtonSubmit={this.onButtonSubmit}\n      />\n      \n      <FaceRecognition box={box} imageUrl={imageUrl}/>\n      </div>\n      : (\n          route === 'signin'\n        \n      ? <Signin onRouteChange={this.onRouteChange}/>\n      : <Register onRouteChange={this.onRouteChange}/>\n       )\n      }\n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}